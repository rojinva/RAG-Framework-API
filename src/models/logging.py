from pydantic import Field
from src.models.base import ConfiguredBaseModel
from typing import List
from uuid import UUID

class TokenUsageDetails(ConfiguredBaseModel):
    prompt_tokens: int = Field(..., description="Prompt Tokens")
    completion_tokens: int = Field(..., description="Completion Tokens")
    total_tokens_used: int = Field(..., description="Total Tokens Used")

class ResponseInfo(ConfiguredBaseModel):
    user_email: str = Field(..., description="User Email")
    prompt: str = Field(..., description="The question asked by the user")
    response: str = Field(..., description="The response generated by agent")
    gpt_model: str = Field(..., description="Name of the OpenAI model used")
    temperature: float = Field(..., description="Temperature of the Language Model")
    indexes_used: List[str] = Field(..., description="The Azure Search Service Indexes Used")
    selected_data_sources: List[str] = Field(..., description="The display names of the selected data sources")
    follow_up_questions: List[str] = Field(..., description="The follow-up questions generated by the FollowUpQuestionGeneratorBot")
    LamBotId: UUID = Field(..., description="The id of the LamBot") 
    LamBotName: str = Field(..., description="The display_name of the LamBot")
    token_consumption_details: TokenUsageDetails = Field(..., description="Token Consumption Details")