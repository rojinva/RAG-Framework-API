<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Lambots Load Tester">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">10000</intProp>
        <intProp name="ThreadGroup.ramp_time">60</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request: Accessible Lambots">
          <stringProp name="HTTPSampler.path">/entity/lambot-configs/accessible</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6InNDRDVMMHJnZldMZlNNMFRONWUzMGdFSDdNXzFLdE95WEREcFhzQlhiVHMiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNOdjBPSTNSd3FsSEZFVm5hb01Bc2hDSDJYRSIsImtpZCI6IkNOdjBPSTNSd3FsSEZFVm5hb01Bc2hDSDJYRSJ9.eyJhdWQiOiJodHRwczovL2dyYXBoLm1pY3Jvc29mdC5jb20iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85MTgwNzlkYi1jOTAyLTRlMjktYjIyYy05NzY0NDEwZDAzNzUvIiwiaWF0IjoxNzQ1NTE5MjY5LCJuYmYiOjE3NDU1MTkyNjksImV4cCI6MTc0NTUyMzk5OSwiYWNjdCI6MCwiYWNyIjoiMSIsImFjcnMiOlsicDEiLCJ1cm46dXNlcjpyZWdpc3RlcnNlY3VyaXR5aW5mbyIsImMxIl0sImFpbyI6IkFYUUFpLzhaQUFBQWI1Y0xLT0ptTnZ3V2phdkcydSs2T2JWeWFaSXI2Nllac3BJM2paU3RhUGZ6ZUpnMGlpbExEdWVFR09CdENpWkI0NGVqQVBqbktKS0JqTk1lYnZaem5GNnA3SGliWWwrSmVWT2E4QzVEUE5hQ1BDbEV3S3RMOUw0KzFUWFlKaTE3d0tOWkZoQzdZMllMbWNBZFBWS1pMZz09IiwiYW1yIjpbInB3ZCIsInJzYSIsIm1mYSJdLCJhcHBfZGlzcGxheW5hbWUiOiJzcC1kZi1sYW1ib3RzLWRldiIsImFwcGlkIjoiYTBmZTllMzMtNThiNC00ODUzLWFjYzMtZTYzMTM2OGY0Mjk4IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiIyMDY4MmQyYi02MDIxLTQzYWItODJjZi1jNTdhZTUyNDk4MzQiLCJmYW1pbHlfbmFtZSI6IkR5ZXIiLCJnaXZlbl9uYW1lIjoiRGFuaWVsIiwiaWR0eXAiOiJ1c2VyIiwiaXBhZGRyIjoiNjYuMjE1LjExOC4yNTQiLCJuYW1lIjoiRHllciwgRGFuaWVsIiwib2lkIjoiODdmZTgzNTAtODk1ZC00ZDNiLWExNDMtZWViMWM1ZTlkNmNmIiwib25wcmVtX3NpZCI6IlMtMS01LTIxLTE0NjEzMDUtODM5ODA4MDQ3LTkzMjk5NTAzNy00MzAyODAiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzIwMDNFNzZFNzZGNiIsInJoIjoiMS5BVnNBMjNtQWtRTEpLVTZ5TEpka1FRMERkUU1BQUFBQUFBQUF3QUFBQUFBQUFBRDVBT3hiQUEuIiwic2NwIjoiQ2FsZW5kYXJzLlJlYWRXcml0ZS5TaGFyZWQgb3BlbmlkIHByb2ZpbGUgVXNlci5SZWFkIFVzZXIuUmVhZC5BbGwgZW1haWwiLCJzaWQiOiIwMDIyMzVlOS0xYmI3LTExMDAtZmFkNy00Yzc3MzgwZTg3ZTAiLCJzaWduaW5fc3RhdGUiOlsiZHZjX21uZ2QiLCJkdmNfY21wIiwiZHZjX2RtamQiLCJrbXNpIl0sInN1YiI6Im9WQy1pQ083VlAwSHVRU3lqUFg3ZW1BazQ4OFlQRUQ4czNDaW5UVktkY2MiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiTkEiLCJ0aWQiOiI5MTgwNzlkYi1jOTAyLTRlMjktYjIyYy05NzY0NDEwZDAzNzUiLCJ1bmlxdWVfbmFtZSI6IkRhbmllbC5EeWVyQGxhbXJlc2VhcmNoLmNvbSIsInVwbiI6IkRhbmllbC5EeWVyQGxhbXJlc2VhcmNoLmNvbSIsInV0aSI6ImlnR0RFTnFjV0VpSFliZ3J4WFdpQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfaWRyZWwiOiIxIDE0IiwieG1zX3N0Ijp7InN1YiI6IlBFVXFHUWg5QlNoMXBlUWFwTHVFNnVqd1J3Z0dvckRSTFFZcUNNM3Zra2sifSwieG1zX3RjZHQiOjEzNTM5MDIxNDZ9.Jfb_d8MpMizYOkGt2h1hLzLV-_gbA1LgF3QYRUDzcwjpbkQ6icZOex9tIDiu-Y61WhMOMCE4dRYwa4nusFpwyj93xgU2VOeCWAwl4bdgBoARm5N-gDxkYGDZ51ed-YYyOAnWYc9U4gQtdtPZ1xjBr7uy3eVXCxt2C5A7zdIuz43L5NYmJUa5fb_rsgztsRsrVb6BO9gAnTQIRGazpwH9moFpnNnrj14HJArJIX-KW1sCIHgDJgaE6RsUES8Yx-sKZlgKV02dlQrwgrqT6ICpHzpDpv2enENtYvTpWCdcX5DkIlY8YolrvMNGzVJtK1fjTEJdw164jiIoy-Z8KZTesA</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults">
        <stringProp name="TestPlan.comments">dev 10.52.42.10</stringProp>
        <stringProp name="HTTPSampler.domain">10.52.42.10</stringProp>
        <stringProp name="HTTPSampler.port">8000</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
      </ConfigTestElement>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
