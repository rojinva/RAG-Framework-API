apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ent-openai-lambots-api-chart.fullname" . }}
  labels:
    {{- include "ent-openai-lambots-api-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ent-openai-lambots-api-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ent-openai-lambots-api-chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ent-openai-lambots-api-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:          
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          {{- if .Values.probes.enabled }}
          readinessProbe:
            failureThreshold: {{ $.Values.probes.readiness.failureThreshold }}
            periodSeconds: {{ $.Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ $.Values.probes.readiness.timeoutSeconds }}
            initialDelaySeconds: {{ $.Values.probes.readiness.initialDelaySeconds }}
            successThreshold: {{ $.Values.probes.readiness.successThreshold }}
            httpGet:
              path: {{ $.Values.healthcheck.path }}
              port: {{ $.Values.healthcheck.port }}
          livenessProbe:
            failureThreshold: {{ $.Values.probes.liveness.failureThreshold }}
            periodSeconds: {{ $.Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ $.Values.probes.liveness.timeoutSeconds }}
            initialDelaySeconds: {{ $.Values.probes.liveness.initialDelaySeconds }}
            successThreshold: {{ $.Values.probes.liveness.successThreshold }}
            httpGet:
              path: {{ $.Values.healthcheck.path }}
              port: {{ $.Values.healthcheck.port }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /app/.env
              subPath: .env
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "ent-openai-lambots-api-chart.fullname" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
